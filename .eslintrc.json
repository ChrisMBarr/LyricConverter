{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.(app|spec|server).json"]
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@typescript-eslint/strict-type-checked",
        "plugin:prettier/recommended"
      ],
      "rules": {
        //Angular specific rules
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],

        //Prefer typescript versions of certain rules
        "no-invalid-this": "off",
        "@typescript-eslint/no-invalid-this": "warn",
        "no-loop-func": "off",
        "@typescript-eslint/no-loop-func": "warn",
        "no-redeclare": "off",
        "@typescript-eslint/no-redeclare": "warn",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "warn",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": "warn",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "no-return-await": "off",
        "@typescript-eslint/return-await": "warn",

        //Typescript specific rules
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/array-type": [
          "warn",
          {
            "default": "generic"
          }
        ],
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/method-signature-style": "warn",
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "enum",
            "format": ["StrictPascalCase"],
            "suffix": ["Enum"]
          },
          {
            "selector": "enumMember",
            "format": ["UPPER_CASE"]
          },
          {
            "selector": ["interface", "typeAlias"],
            "format": ["StrictPascalCase"],
            "prefix": ["I"]
          }
        ],
        "@typescript-eslint/no-extraneous-class": "off",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/prefer-regexp-exec": "warn",
        "@typescript-eslint/strict-boolean-expressions": "warn",
        "@typescript-eslint/member-ordering": [
          "warn",
          {
            "classes": [
              "private-readonly-field",
              "private-field",
              "decorated-field",
              "field",
              "constructor",
              "public-method",
              "private-method"
            ]
          }
        ],

        //Regular ESLint rules
        "array-callback-return": "warn",
        "sort-imports": ["warn", { "allowSeparatedGroups": true }],
        "complexity": ["warn", { "max": 8 }],
        "eqeqeq": ["warn", "always", { "null": "ignore" }],
        "object-shorthand": ["warn", "always"],

        "prettier/prettier": [
          "warn",
          {
            "endOfLine": "auto"
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": [
        "plugin:@angular-eslint/template/recommended",
        "plugin:@angular-eslint/template/accessibility"
      ],
      "rules": {}
    },
    {
      "files": ["*.spec.ts", "test/**/*.ts"],
      "rules": {
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/unbound-method": "off"
      }
    }
  ]
}
